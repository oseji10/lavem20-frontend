@function get-contrast-color($color) {
  @if(lightness($color) < 40) {
    @return $gray-900;
  } @else {
    @return $white;
  }
}

@function gen-color-opacity-map($color) {
  $map: (
    50: rgba($color, .05),
    100: rgba($color, .1),
    200: rgba($color, .2),
    300: rgba($color, .4),
    400: rgba($color, .8),
    500: $color,
    600: darken($color, 10),
    700: darken($color, 20),
    800: darken($color, 30),
    900: darken($color, 40),
  );
  @return $map;
}

@function gen-color-full-opacity-map($color-map) {
  $full-color-map: ();
  @each $name, $value in $color-map {
    $map: ();
    $map: map-merge($map, ($name: gen-color-opacity-map($value)) );
    $full-color-map: map-merge($full-color-map, $map);
  }
  @return $full-color-map;
}
//Generate color opacity map
/*
$opacity-map: (
  blue: (
    100: #f31312,
    .....,
    900: #f32332
  ),
  red: (
    100: #f31312,
    .....,
    900: #f32332
  )
)
*/
$opacity-map: gen-color-full-opacity-map($solid-colors);

@function get-color-opacity($color, $opacity) {
  @return map-get(map-get($opacity-map, $color), $opacity);
}

// .opacity {
//   background: get-color-opacity('red', 50)
// }